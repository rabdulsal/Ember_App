App = Ember.Application.create({
	LOG_TRANSITIONS: true
});

//Router
App.Router.map(function() {
	this.resource('about');
	this.resource('rashad', { path: '/thanks' });
	this.resource('products', function() {
		this.resource('product', { path: '/:product_id' });
		this.route('onsale');
		this.route('deals');
	});
	this.resource('contacts', function() {
		this.resource('contact', { path: '/:contact_id' });
	});	
});

// Controllers

App.IndexController = Ember.ArrayController.extend({
	productsCount: Ember.computed.alias('length'),
	time: function() {
		return (new Date()).toDateString();
	}.property(),
	open: function() {
    	return ((new Date()).getDay() === 0) ? "Closed" : "Open";
  	}.property(),
  	onSale: function() {
  		return this.filterBy('isOnSale').slice(0,3);
  	}.property('@each.isOnSale')
});

App.ContactsIndexController = Ember.ObjectController.extend({
  contactName: function() {
  	return this.get('name');
  }.property('name'),
  avatar: 'images/avatars/avatar_logo.png',
  open: function() {
    return ((new Date()).getDay() === 0) ? "Closed" : "Open";
  }.property()
});

App.ProductsController = Ember.ArrayController.extend({
	sortProperties: ['title']
});

App.ContactsController = Ember.ArrayController.extend({
	sortProperties: ['name']
});

App.ReviewsController = Ember.ArrayController.extend({
	sortProperties: ['reviewedAt'],
	sortAscending: false
});

/*App.ProductsIndexController = Ember.ArrayController.extend({
  deals: function(){
    return this.filter(function(product) {
      return product.get('price') < 500;
    });
  }.property('@each.price')
});*/

// Routes

App.ContactsRoute = Ember.Route.extend({
	model: function() {
		return this.store.findAll('contact'); 
  }
});

//Routes
App.ProductsRoute = Ember.Route.extend({
	model: function() {
		return this.store.findAll('product');
	}
});

App.IndexRoute = Ember.Route.extend({
	model: function() {
		return this.store.findAll('product');
	}
});

App.ContactsIndexRoute = Ember.Route.extend({
  model: function(){
   	return this.store.find('contact', 201); 
  }
});

App.ProductsIndexRoute = Ember.Route.extend({
  model: function(){
   return this.store.findAll('product'); 
  }
});

App.ProductsOnsaleRoute = Ember.Route.extend({
	model: function() {
		return this.modelFor('products').filterBy('isOnSale');
	}	
});

App.ProductsDealsRoute = Ember.Route.extend({
  model: function(){
    return this.modelFor('products').filter(function(product) {
      return product.get('price') < 500;
    });
  }
});

//Product Show Page Route
// App.ProductRoute = Ember.Route.extend({
// 	model: function(params) {
// 		return this.store.find('product', params.product_id);
// 	}
// });

// Components

App.ProductDetailsComponent = Ember.Component.extend({
	reviewsCount: Ember.computed.alias('product.reviews.length'),
	hasReviews: function() {
		return this.get('reviewsCount') > 0;
	}.property('reviewsCount')
});

App.ContactDetailsComponent = Ember.Component.extend({
	productsCount: Ember.computed.alias('contact.products.length'),
	isProductive: function() {
		return this.get('productsCount') > 3;
	}.property('productsCount')
});

// Views

App.ProductView = Ember.View.extend({
	classNames: ['row'],
	classNameBindings: ['isOnSale'],
	isOnSale: Ember.computed.alias('controller.isOnSale')
});

// Model Structure

App.Product = DS.Model.extend({
	title: DS.attr('string'),
	price: DS.attr('number'),
	description: DS.attr('string'),
	isOnSale: DS.attr('boolean'),
	image: DS.attr('string'),
	reviews: DS.hasMany('review', {async: true}),
	crafter: DS.belongsTo('contact', {async: true})
});

App.Review = DS.Model.extend({
	text: DS.attr('string'),
	reviewedAt: DS.attr('date'),
	product: DS.belongsTo('product')
});

App.Contact = DS.Model.extend({
	name: DS.attr('string'),
	about: DS.attr('string'),
	avatar: DS.attr('string'),
	products: DS.hasMany('product', { async: true })
});

// Fixture Adapter
App.ApplicationAdapter = DS.FixtureAdapter.extend();

// RESTful requests
// App.ApplicationAdapter = DS.RESTAdapter.extend();


//FIXTURES
App.Product.FIXTURES = [
{
    id: 1,
    title: 'Flint',
    price: 99,
    description: 'Flint is a hard, sedimentary cryptocrystalline form of the mineral quartz, categorized as a variety of chert.',
    isOnSale: true,
    image: 'images/products/flint.png',
    reviews: [100,101],
    crafter: 200
},
{
    id: 2,
    title: 'Kindling',
    price: 249,
    description: 'Easily combustible small sticks or twigs used for starting a fire.',
    isOnSale: false,
    image: 'images/products/kindling.png',
    crafter: 201
},

  {
    id: 3,
    title: 'Matches',
    price: 499,
    description: 'One end is coated with a material that can be ignited by frictional heat generated by striking the match against a suitable surface.',
    isOnSale: true,
    reviews: [103],
    image: 'images/products/matches.png',
    crafter: 201
  },
  {
    id: 4,
    title: 'Bow Drill',
    price: 999,
    description: 'The bow drill is an ancient tool. While it was usually used to make fire, it was also used for primitive woodworking and dentistry.',
    isOnSale: false,
    reviews: [104],
    image: 'images/products/bow-drill.png',
    crafter: 200
  },
  {
    id: 5,
    title: 'Tinder',
    price: 499,
    description: 'Tinder is easily combustible material used to ignite fires by rudimentary methods.',
    isOnSale: true,
    reviews: [],
    image: 'images/products/tinder.png',
    crafter: 201
  },
  {
    id: 6,
    title: 'Birch Bark Shaving',
    price: 999,
    description: 'Fresh and easily combustable',
    isOnSale: true,
    reviews: [],
    image: 'images/products/birch.png',
    crafter: 200
  }
];

App.Review.FIXTURES = [
{
	id: 100,
	product: 1,
	text: "Started a fire in no time!"
},
{
	id: 101,
	product: 1,
	text: "Not the brightest flame, but warm!"
}
];

// Contacts

App.Contact.FIXTURES = [
  {
  	id: 200,
    name: 'Giamia',
    about: 'Although Giamia came from a humble spark of lightning, he quickly grew to be a great craftsman, providing all the warming instruments needed by those close to him.',
    avatar: 'images/avatars/giamia.png',
    products: [1,4,6]
  },
  {
  	id: 201,
    name: 'Anostagia',
    about: 'Knowing there was a need for it, Anostagia drew on her experience and spearheaded the Flint & Flame storefront. In addition to coding the site, she also creates a few products available in the store.',
    avatar: 'images/avatars/anostagia.png',
    products: [2,3,5]
  }
];

